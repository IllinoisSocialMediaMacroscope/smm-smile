var {
	GraphQLSchema,
	GraphQLObjectType,
	GraphQLString,
	GraphQLList,
	GraphQLInt,
	GraphQLFloat,
	GraphQLBoolean
} = require('graphql');

const redditCommentType = module.exports = new GraphQLObjectType({
	name:'redditComment',
	description:'',
	fields: () => ({
		comment_author_name:	{type:GraphQLString,
									resolve:({author})=>{return author.name}},
		author_flair_css_class:	{type:GraphQLString},
		author_flair_text:		{type:GraphQLString},
		archived:				{type:GraphQLBoolean},
		approved_by:			{type:GraphQLString},
		banned_by:				{type:GraphQLString},
		body:					{type:GraphQLString},
		body_html:				{type:GraphQLString},
		created_utc:			{type:GraphQLString},
		comment_created:		{type:GraphQLString,
									resolve:({created}) => {return created}},
		controversiality:		{type:GraphQLInt},
		distinguished:			{type:GraphQLBoolean},
		comment_downs:			{type:GraphQLInt,
									resolve:({downs})=> {return downs}},
		edited:					{type:GraphQLBoolean},
		gilded:					{type:GraphQLInt},
		comment_id:				{type:GraphQLString,
									resolve:({id}) => {return id}},
		link_id:				{type:GraphQLString},
		link_author:			{type:GraphQLString},
		link_title:				{type:GraphQLString},
		link_permalink:			{type:GraphQLString},
		link_url:				{type:GraphQLString},
		likes:					{type:GraphQLInt},
		mod_reports:			{type:new GraphQLList(GraphQLString)},
		comment_name:			{type:GraphQLString,
									resovle:({name}) => {return name}},
		comment_num_comments:	{type:GraphQLInt,
									resolve: ({num_comments}) => {return num_comments }},
		comment_num_reports:	{type:GraphQLInt,
									resolve: ({num_reports}) => {return num_reports }},
		comment_over_18:		{type:GraphQLBoolean,
									resolve: ({over_18}) => {return over_18 }},
		parent_id:				{type:GraphQLString},
		quarantine:				{type:GraphQLBoolean},
		report_reasons:			{type:new GraphQLList(GraphQLString)},
		removal_reason:			{type:GraphQLString},
		saved:					{type:GraphQLBoolean},
		comment_score:			{type:GraphQLInt,
									resolve: ({score}) => {return score}},
		subreddit_id:			{type:GraphQLString},
		subreddit_display_name:	{type:GraphQLString,
									resolve:({subreddit})=>{return subreddit.display_name}},
		subreddit_name_prefixed:{type:GraphQLString},
		score_hidden:			{type:GraphQLBoolean},
		stickied:				{type:GraphQLBoolean},
		subreddit_type:			{type:GraphQLString},
		comment_ups:			{type:GraphQLInt,
									resolve: ({ups}) => {return ups }},
		user_reports:			{type:new GraphQLList(GraphQLString)}
	})
});